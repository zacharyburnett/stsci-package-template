[tox]
envlist =
    check-{docs,style,security,build}
    test{,-oldestdeps,-devdeps}{,-cov}-xdist

[testenv:check-docs]
description = check the links in the HTML docs
change_dir = docs
extras = 
    docs
commands =
    sphinx-build -W -b linkcheck . _build/html

[testenv:check-style]
skip_install = true
change_dir = .
description = check code style with flake8
deps = 
    flake8
commands = 
    flake8 packagename --count

[testenv:check-security]
skip_install = true
change_dir = .
description = security audit with bandit
deps = 
    bandit
commands = 
    bandit -r packagename -c .bandit.yaml

[testenv:check-build]
description = PEP 517
change_dir = .
skip_install = true
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/*

[testenv]
# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    devdeps: with the latest developer version of key dependencies
    cov: and test coverage
    xdist: in parallel
set_env = 
    # Suppress display of matplotlib plots generated during docs build, if any
    MPLBACKEND=agg
pass_env = 
    # Pass through the following environment variables which may be needed for the CI
    HOME 
    WINDIR 
    LC_ALL 
    LC_CTYPE 
    CC 
    CI
# Run the tests in a temporary directory to make sure that we don't import this package from the source tree
change_dir = .tmp/{envname}
deps =
    cov: pytest-cov
    oldestdeps: minimum_dependencies
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy
    xdist: pytest-xdist
extras =
    test
commands_pre =
    oldestdeps: minimum_dependencies packagename --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze
commands =
    pytest packagename {project_root}/docs \\
    cov: --cov packagename --cov-config={toxinidir}/setup.cfg --cov-report xml:coverage.xml --cov-report term-missing \\
    xdist: -n auto \\
    {posargs}

